<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Charts" xml:space="preserve">
    <value>Dodatkowe wykresy</value>
  </data>
  <data name="Compliance" xml:space="preserve">
    <value>Zgodność z normą</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Treść</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Przy użyciu : PowerQualityManger</value>
  </data>
  <data name="CriteriaResults" xml:space="preserve">
    <value>Zgodność z kryteriami</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Wygenerowano: </value>
  </data>
  <data name="DateRange" xml:space="preserve">
    <value>Obejmuje zakres:</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Od:  </value>
  </data>
  <data name="GeneratedFor" xml:space="preserve">
    <value>Raport Wygenerowano dla stacji: </value>
  </data>
  <data name="Graphs" xml:space="preserve">
    <value>Wykresy pomocnicze</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>Brak danych</value>
  </data>
  <data name="Norm" xml:space="preserve">
    <value>Nr kryterium</value>
  </data>
  <data name="Norm1" xml:space="preserve">
    <value>1)   Wartośc średnia częstotliwości mierzonej przez 10 sekund w miejsach przyłączenia powinna być zawarta w przedziale:</value>
  </data>
  <data name="Norm1a" xml:space="preserve">
    <value>a) 50 Hz ±1 % (od 49,5 Hz do 50,5 Hz) przez 99,5 % tygodnia</value>
  </data>
  <data name="Norm1b" xml:space="preserve">
    <value>b) 50 Hz +4 % / –6 % (od 47 Hz do 52 Hz) przez 100 % tygodnia</value>
  </data>
  <data name="Norm2" xml:space="preserve">
    <value>2)   W każdym tygodniu 95 % ze zbioru 10-minutowych średnich wartości skutecznych napięcia zasilającego powinno mieścić sie w przedziale odchyleń +- 10% napięcia znamionowego</value>
  </data>
  <data name="Norm3" xml:space="preserve">
    <value>3)   Przez 95 % czasu każdego tygodnia wskaźnik długookresowego migotania świata Plt spowodowanego wahaniami napięcia zasilającego nie powinien być większy od 1</value>
  </data>
  <data name="Norm4" xml:space="preserve">
    <value>4)   W ciągu każdego tygodnia 95 % ze zbioru 10-minutowych średnich wartości skutecznych:</value>
  </data>
  <data name="Norm4a" xml:space="preserve">
    <value>a) Składowej symetrycznej kolejności przeciwnej napięcia zasilającego powinno mieścić się w przedziale od 0 % do 2 % wartości składowej kolejności zgodnej</value>
  </data>
  <data name="Norm4b" xml:space="preserve">
    <value>b) Dla każdej harmonicznej napięcia zasilającego powinno być mniejsze lub równe wartościom określonym w poniższej tabeli:</value>
  </data>
  <data name="Norm5" xml:space="preserve">
    <value>5)   Współczynnik odkształcenia wyższymi harmonicznymi napięcia zasilającego THD uwzględniający wyższe harmoniczne do rzędu 40, powinien być mniejszy lub równy 8 %</value>
  </data>
  <data name="Norm6" xml:space="preserve">
    <value>6)   Warunkiem utrzymania parametrów napięcia zasilającego w granicach określonych w pkt 1—5 jest pobieranie przez odbiorcę mocy nie większej od mocy umownej, przy współczynniku tg fi nie większym niż 0,4</value>
  </data>
  <data name="Norms" xml:space="preserve">
    <value>Kryteria oceny jakości napięcia</value>
  </data>
  <data name="Ordinance" xml:space="preserve">
    <value>Poprawność parametrów energii elektrycznej jest opracowana na podstawie rozporządzenia ministra gospodarki z dnia 4 maja 2077r. w sprawie szczegółowych warunków funkcjonowania systemu elektroenergetycznego. Dziennik Ustaw Nr 93 Poz. 623.</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Powód</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Wynik</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Wyniki</value>
  </data>
  <data name="Signature" xml:space="preserve">
    <value>Niniejsze opracowanie zostało opracowane dzięki aplikacji PowerQualityManager stworzonej w ramach pracy magisterskiej autorstwa Szymon Lis. </value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Raport z analizy jakości energii elektrycznej</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>Do: </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Tak</value>
  </data>
</root>