@model AddReportModel
@{

}

<script src="~/js/alerts.js"></script>
<script src="~/js/table.js"></script>

@using (Html.BeginForm("Generate", "Report", FormMethod.Post))
{
    <div id="overlay"></div>

    <div class="p-4 bg-secondary">
        <h2>Generuj Raport</h2>

        <div class="row" id="alertsGenerate">
        </div>

        <div class="row">
            <div class="col-md-8">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Nazwa</label>
                        <input asp-for="Name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="Template" class="control-label">Nazwa szablonu</label>
      @*                  <input asp-for="Template" class="form-control" />*@
                        <select id="templates1"
                            onchange="if(this.options[this.selectedIndex].value=='customOption'){toggleField(this,'templates2');this.selectedIndex='0';}" 
                            asp-for="Template" asp-items="@ViewBag.Templates" class="form-control">
                            <option></option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="DateFrom" class="control-label">Data rozpoczęcie</label>
                        <input asp-for="DateFrom" class="form-control datepicker" id="startDate" type="datetime-local" />
                    </div>
                    <div class="form-group">
                        <label asp-for="DateTo" class="control-label">Data zakończenia</label>
                        <input asp-for="DateTo" class="form-control datepicker" id="endDate" type="datetime-local" />
                    </div>
                    <div class="form-group">
                        <label asp-for="MeasuringPoint" class="control-label">Nazwa punktu pomiarowego</label>
                        <select id="points1"
                            onchange="if(this.options[this.selectedIndex].value=='customOption'){toggleField(this,'points2');this.selectedIndex='0';}" 
                            asp-for="MeasuringPoint" asp-items="@ViewBag.MeasuringPoints" class="form-control">
                            <option></option>
                        </select>
                        <input asp-for="MeasuringPoint" id="points2" class="form-control" style="display:none;" onblur="if(this.value==''){toggleField(this,'points1');}">
                    </div>
                    <div id="hiddenInputs">
                    </div>
                    
                    <div class="form-group">
                        <input type="submit" value="Generuj" class="btn btn-primary bg-gradient-primary btn-lg w-100" />
                    </div>
                </form>
            </div>
        </div>

    </div>
}
<script src="~/js/table.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://npmcdn.com/flatpickr/dist/l10n/pl.js"></script>
<script>

    //const Polish = require("flatpickr/dist/l10n/pl.ts");
    //var measuringPoints = @Html.Raw(Json.Serialize(ViewBag.MeasuringPoints));
    var templates = @Html.Raw(Json.Serialize(ViewBag.Templates));
    var startDate = @Html.Raw(Json.Serialize(ViewBag.StartDate));
    var endDate = @Html.Raw(Json.Serialize(ViewBag.EndDate));

    console.log(startDate)
    console.log(endDate)

    flatpickr.localize(flatpickr.l10ns.pl);

    config = {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
        time_24hr: true,
        altInput: true,
        defaultHour: 0,
        minDate: startDate,
        maxDate: endDate
    }

    flatpickr("#startDate", config);
    flatpickr("#endDate", config);
</script>
<script>
    function toggleField(hideObj, showObj) {
        console.log(showObj)
        hideObj.disabled = true;
        hideObj.style.display = 'none';
      
        show = document.getElementById(showObj)
        show.disabled = false;
        show.style.display = 'inline';
        show.focus();
    }
</script>


