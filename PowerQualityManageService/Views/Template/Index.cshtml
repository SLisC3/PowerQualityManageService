@using System.Data;
@using PowerQualityManageService.Model.Models;
@{
    List<PowerQualityManageService.Model.Models.Template> templates = null;
}
<script src="~/js/alerts.js"></script>
<script src="~/js/table.js"></script>
<script src="~/js/loading.js"></script>
<script src="~/js/buttons.js"></script>
<div class="text-center">
    <h1 class="display-4">Szablony</h1>
    <div class="container">

        @*Sekcja Alertów*@
        <div class="row">
            <div id="alertTemplate"></div>
        </div>

        @*Sekcja 1 - Notka po prawej po lewej funkcyjny*@
        <div class="row">
            <div class="col">
                <div class="row">
                    <div style="margin-bottom: 40px;"></div>
                </div>
                <div class="row">
                    <button id="showAddNewTemplateFormButton" class="btn btn-primary bg-gradient-primary btn-lg w-100" type="button" onclick="location.href='@Url.Action("Create", "Template")'">Dodaj nowy szablon</button>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-header p-0 mx-3 mt-3 position-relative z-index-1">
                    </div>
                    <div class="card-body pt-2">
                        <a class="card-title h5 d-block text-darker">
                            Wskazówki
                        </a>
                        Aby dodać nowy szablon należy: <br />
                        1. Wybrać opcję Dodaj nowy szablon<br />
                        2. Uzupełnić nazwę oraz opis<br />
                        3. Dodać wybrane wykresy, nadać im nazwę oraz wybrać z listy jakie parametry powinny się na nim znajdować<br />
                        <br />
                        Możliwa jest również edycja lub usunięcie wskazanego szablonu:<br />
                        1. Wybrać dostępny szablon z listy<br />
                        2. Pojawi się opcja Edytuj lub Usuń

                    </div>
                </div>
            </div>
        </div>

        @*Sekcja 2 - Lista Szablonów*@
        <div class="row">
            <label for="templates"> Dostępne szablony: </label>
            <select id="templates" onchange="templateSelected()" class="form-control" name="templates" placeholder="Wybierz szablon" multiple>
                @{
                    templates = ViewBag.Templates;
                    foreach (PowerQualityManageService.Model.Models.Template temp in templates)
                    {
                        <option value="@temp.Name">@temp.Name</option>
                    }
                }
            </select>
        </div>

        <div class="row">
            <div style="margin-bottom: 20px;"></div>
        </div>

        @*Sekcja 3 - przyciski*@
        <div class="row">

            <div class="col">
                <button id="showEditTemplateFormButton" class="hiddenbtn btn-primary bg-gradient-primary btn-lg w-100" type="button" onclick="redirectToEdit()">Edytuj</button>
            </div>

            <div class="col">
                <button id="deleteTemplateButton" class="hiddenbtn btn-primary bg-gradient-primary btn-lg w-100" type="button" onclick="redirectToDelete()">Usuń</button>
            </div>

        </div>

        <div class="row">
            <div style="margin-bottom: 20px;"></div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        function redirectToEdit() {
            var inputValue = document.getElementById("templates").value;
            var url = '@Url.Action("Edit", "Template")' + '?name=' + encodeURIComponent(inputValue);
            location.href = url;
        }
        function redirectToDelete() {
            var inputValue = document.getElementById("templates").value;
            console.log("Val", inputValue);
            var url = '@Url.Action("Delete", "Template")' + '?name=' + encodeURIComponent(inputValue);
            location.href = url;
        }
    </script>
    <script>
        function templateSelected(){
            var val = document.getElementById("templates").value;
            currentTemplate = val;
            console.log("Wartość",val)
            if(val!=null){
                unhideBtn('showEditTemplateFormButton');
                unhideBtn('deleteTemplateButton');
            }
            else{
                hideBtn('showEditTemplateFormButton');
                hideBtn('deleteTemplateButton');
            }
            console.log("Wartość", val)
        }
    </script> 
}

